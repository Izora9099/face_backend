# Generated by Django 4.2.23 on 2025-06-21 06:54

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_securitysettings_loginattempt_activesession_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendance',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('core.attendancerecord',),
        ),
        migrations.AddField(
            model_name='student',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2025, 6, 21, 6, 54, 46, 66380, tzinfo=datetime.timezone.utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='student',
            name='email',
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AddField(
            model_name='student',
            name='student_class',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='student',
            name='student_id',
            field=models.CharField(blank=True, max_length=50, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='useractivity',
            name='action',
            field=models.CharField(choices=[('VIEW_STUDENTS', 'View Students'), ('MARK_ATTENDANCE', 'Mark Attendance'), ('USE_FACE_RECOGNITION', 'Use Face Recognition'), ('GENERATE_REPORT', 'Generate Report'), ('UPDATE_STUDENT', 'Update Student'), ('DELETE_ATTENDANCE', 'Delete Attendance'), ('CREATE_STUDENT', 'Create Student'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('VIEW_ADMIN_USERS', 'View Admin Users'), ('CREATE_ADMIN_USER', 'Create Admin User'), ('UPDATE_ADMIN_USER', 'Update Admin User'), ('DELETE_ADMIN_USER', 'Delete Admin User'), ('CHANGE_SECURITY_SETTINGS', 'Change Security Settings'), ('TERMINATE_SESSION', 'Terminate Session')], max_length=50),
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_name', models.CharField(default='FACE.IT School', max_length=200)),
                ('school_address', models.TextField(blank=True)),
                ('school_phone', models.CharField(blank=True, max_length=20)),
                ('school_email', models.EmailField(blank=True, max_length=254)),
                ('academic_year', models.CharField(default='2024-2025', max_length=20)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('date_format', models.CharField(default='YYYY-MM-DD', max_length=20)),
                ('time_format', models.CharField(default='24h', max_length=10)),
                ('attendance_grace_period', models.IntegerField(default=15, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(60)])),
                ('late_threshold', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)])),
                ('auto_mark_absent_after', models.IntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(24)])),
                ('require_checkout', models.BooleanField(default=False)),
                ('allow_manual_attendance', models.BooleanField(default=True)),
                ('attendance_notifications', models.BooleanField(default=True)),
                ('face_recognition_enabled', models.BooleanField(default=True)),
                ('face_confidence_threshold', models.IntegerField(default=80, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(99)])),
                ('max_face_images_per_student', models.IntegerField(default=5, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('face_detection_timeout', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(60)])),
                ('auto_capture_enabled', models.BooleanField(default=False)),
                ('face_image_quality_threshold', models.IntegerField(default=70, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(100)])),
                ('email_enabled', models.BooleanField(default=False)),
                ('smtp_host', models.CharField(blank=True, max_length=100)),
                ('smtp_port', models.IntegerField(default=587)),
                ('smtp_username', models.CharField(blank=True, max_length=100)),
                ('smtp_password', models.CharField(blank=True, max_length=100)),
                ('smtp_use_tls', models.BooleanField(default=True)),
                ('email_from_address', models.EmailField(blank=True, max_length=254)),
                ('email_from_name', models.CharField(default='FACE.IT System', max_length=100)),
                ('send_absence_notifications', models.BooleanField(default=True)),
                ('send_late_notifications', models.BooleanField(default=True)),
                ('send_weekly_reports', models.BooleanField(default=False)),
                ('parent_notification_enabled', models.BooleanField(default=False)),
                ('admin_notification_enabled', models.BooleanField(default=True)),
                ('max_file_upload_size', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('image_compression_quality', models.IntegerField(default=85, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(100)])),
                ('auto_backup_enabled', models.BooleanField(default=False)),
                ('backup_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='weekly', max_length=20)),
                ('backup_retention_days', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(7), django.core.validators.MaxValueValidator(365)])),
                ('storage_cleanup_enabled', models.BooleanField(default=True)),
                ('maintenance_mode', models.BooleanField(default=False)),
                ('maintenance_message', models.TextField(default='System is under maintenance. Please check back later.')),
                ('system_announcement', models.TextField(blank=True)),
                ('debug_mode', models.BooleanField(default=False)),
                ('log_level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], default='INFO', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Settings',
                'verbose_name_plural': 'System Settings',
            },
        ),
        migrations.CreateModel(
            name='SystemBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=200)),
                ('file_path', models.CharField(max_length=500)),
                ('file_size', models.BigIntegerField()),
                ('backup_type', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic'), ('scheduled', 'Scheduled')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
